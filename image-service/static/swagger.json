{
  "openapi": "3.0.3",
  "info": {
    "title": "Image Service API",
    "version": "1.0.0",
    "description": "Image processing service API documentation"
  },
  "servers": [],
  "components": {
    "schemas": {
      "Product": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "example": "507f1f77bcf86cd799439011" },
          "key": { "type": "string", "example": "product_key" },
          "title": { "type": "string", "example": "Product Title" },
          "description": { "type": "string", "example": "Product Description" },
          "product_type": { "type": "string", "example": "IMAGE_PROCESSING" },
          "is_active": { "type": "boolean", "example": true },
          "is_free": { "type": "boolean", "example": false },
          "createdAt": { "type": "string", "format": "date-time", "example": "2024-01-01T00:00:00Z" },
          "updatedAt": { "type": "string", "format": "date-time", "example": "2024-01-01T00:00:00Z" }
        }
      },
      "Instruction": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "example": "507f1f77bcf86cd799439011" },
          "user_id": { "type": "string", "example": "507f1f77bcf86cd799439011" },
          "product_id": { "type": "string", "example": "507f1f77bcf86cd799439011" },
          "created_at": { "type": "string", "format": "date-time", "example": "2024-01-01T00:00:00Z" },
          "updated_at": { "type": "string", "format": "date-time", "example": "2024-01-01T00:00:00Z" }
        }
      },
      "InstructionDetail": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "example": "507f1f77bcf86cd799439011" },
          "instruction_id": { "type": "string", "example": "507f1f77bcf86cd799439011" },
          "file_name": { "type": "string", "example": "example.jpg" },
          "file_size": { "type": "integer", "format": "int64", "example": 1024 },
          "mime_type": { "type": "string", "example": "image/jpeg" },
          "status": { "type": "string", "enum": ["PENDING", "PROCESSING", "DONE", "FAILED"], "example": "DONE" },
          "output_id": { "type": ["string", "null"], "nullable": true, "example": "507f1f77bcf86cd799439011" },
          "is_cleaned": { "type": "boolean", "example": false },
          "created_at": { "type": "string", "format": "date-time", "example": "2024-01-01T00:00:00Z" },
          "updated_at": { "type": "string", "format": "date-time", "example": "2024-01-01T00:00:00Z" }
        }
      },
      "CreateInstructionRequest": {
        "type": "object",
        "required": ["product_id"],
        "properties": {
          "product_id": { "type": "string", "example": "507f1f77bcf86cd799439011" }
        }
      }
    }
  },
  "paths": {
    "/health": {
      "get": {
        "summary": "Health check",
        "responses": {
          "200": {
            "description": "Service is healthy",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "example": "ok" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products": {
      "get": {
        "summary": "List available products",
        "tags": ["products"],
        "security": [
          {
            "x-authenticated": [],
            "x-user-id": [],
            "x-user-origin": []
          }
        ],
        "responses": {
          "200": {
            "description": "Products retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Products retrieved successfully" },
                    "errors": { "type": ["array", "null"], "items": { "type": "object" }, "nullable": true },
                    "data": { "type": "object", "properties": { "products": { "type": "array", "items": { "$ref": "#/components/schemas/Product" } } } }
                  }
                }
              }
            }
          },
          "401": { "description": "Not authenticated" },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/instructions": {
      "post": {
        "summary": "Create a new image processing instruction for a product",
        "tags": ["instructions"],
        "security": [
          {
            "x-authenticated": [],
            "x-user-id": [],
            "x-user-origin": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateInstructionRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Instruction created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "instruction created" },
                    "errors": { "type": ["array", "null"], "items": { "type": "object" }, "nullable": true },
                    "data": { "type": "object", "properties": { "instruction": { "$ref": "#/components/schemas/Instruction" } } }
                  }
                }
              }
            }
          },
          "400": { "description": "Invalid request body" },
          "401": { "description": "Not authenticated" },
          "404": { "description": "Product not found" },
          "500": { "description": "Internal server error" }
        }
      },
      "get": {
        "summary": "Get latest instructions for authenticated user",
        "tags": ["instructions"],
        "security": [
          {
            "x-authenticated": [],
            "x-user-id": [],
            "x-user-origin": []
          }
        ],
        "responses": {
          "200": {
            "description": "Instructions retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Instructions retrieved successfully" },
                    "errors": { "type": ["array", "null"], "items": { "type": "object" }, "nullable": true },
                    "data": { "type": "object", "properties": { "instructions": { "type": "array", "items": { "$ref": "#/components/schemas/Instruction" } } } }
                  }
                }
              }
            }
          },
          "401": { "description": "Not authenticated" },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/instructions/{id}": {
      "get": {
        "summary": "Get a specific instruction by ID",
        "tags": ["instructions"],
        "security": [
          {
            "x-authenticated": [],
            "x-user-id": [],
            "x-user-origin": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string", "example": "507f1f77bcf86cd799439011" }
          }
        ],
        "responses": {
          "200": {
            "description": "Instruction retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Instruction retrieved successfully" },
                    "errors": { "type": ["array", "null"], "items": { "type": "object" }, "nullable": true },
                    "data": { "type": "object", "properties": { "instruction": { "$ref": "#/components/schemas/Instruction" } } }
                  }
                }
              }
            }
          },
          "401": { "description": "Not authenticated" },
          "404": { "description": "Instruction not found" },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/instructions/{id}/details": {
      "get": {
        "summary": "Get all details for a specific instruction",
        "tags": ["instructions", "files"],
        "security": [
          {
            "x-authenticated": [],
            "x-user-id": [],
            "x-user-origin": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string", "example": "507f1f77bcf86cd799439011" }
          }
        ],
        "responses": {
          "200": {
            "description": "Instruction details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Instruction details retrieved successfully" },
                    "errors": { "type": ["array", "null"], "items": { "type": "object" }, "nullable": true },
                    "data": { "type": "object", "properties": { "instruction_details": { "type": "array", "items": { "$ref": "#/components/schemas/InstructionDetail" } } } }
                  }
                }
              }
            }
          },
          "401": { "description": "Not authenticated" },
          "404": { "description": "Instruction not found" },
          "500": { "description": "Internal server error" }
          }
        }
      },
      "post": {
        "summary": "Add new details to an existing instruction",
        "tags": ["instructions", "files"],
        "security": [
          {
            "x-authenticated": [],
            "x-user-id": [],
            "x-user-origin": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string", "example": "507f1f77bcf86cd799439011" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": { "type": "string", "format": "binary", "description": "Image file to process" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Instruction details created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "instruction details created" },
                    "errors": { "type": ["array", "null"], "items": { "type": "object" }, "nullable": true },
                    "data": { "type": "object", "properties": { "instruction_detail": { "$ref": "#/components/schemas/InstructionDetail" } } }
                  }
                }
              }
            }
          },
          "400": { "description": "Invalid request" },
          "401": { "description": "Not authenticated" },
          "404": { "description": "Instruction not found" },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/instructions/{id}/details/{detailId}": {
      "get": {
        "summary": "Get specific details for an instruction",
        "tags": ["instructions", "files"],
        "security": [
          {
            "x-authenticated": [],
            "x-user-id": [],
            "x-user-origin": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string", "example": "507f1f77bcf86cd799439011" }
          },
          {
            "in": "path",
            "name": "detailId",
            "required": true,
            "schema": { "type": "string", "example": "507f1f77bcf86cd799439011" }
          }
        ],
        "responses": {
          "200": {
            "description": "Instruction detail retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "instruction detail retrieved" },
                    "errors": { "type": ["array", "null"], "items": { "type": "object" }, "nullable": true },
                    "data": { "type": "object", "properties": { "instruction_detail": { "$ref": "#/components/schemas/InstructionDetail" } } }
                  }
                }
              }
            }
          },
          "401": { "description": "Not authenticated" },
          "404": { "description": "Instruction detail not found" },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/instructions/{id}/details/{detailId}/file": {
      "get": {
        "summary": "Get the file for a specific instruction detail",
        "tags": ["instructions", "files"],
        "security": [
          {
            "x-authenticated": [],
            "x-user-id": [],
            "x-user-origin": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string", "example": "507f1f77bcf86cd799439011" }
          },
          {
            "in": "path",
            "name": "detailId",
            "required": true,
            "schema": { "type": "string", "example": "507f1f77bcf86cd799439011" }
          }
        ],
        "responses": {
          "200": {
            "description": "File retrieved successfully",
            "content": {
              "application/octet-stream": {
                "schema": { "type": "string", "format": "binary" }
              }
            }
          },
          "401": { "description": "Not authenticated" },
          "404": { "description": "File not found" },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/files": {
      "get": {
        "summary": "List files that haven't been cleaned up yet",
        "tags": ["files"],
        "security": [
          {
            "x-authenticated": [],
            "x-user-id": [],
            "x-user-origin": []
          }
        ],
        "responses": {
          "200": {
            "description": "Files retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Files retrieved successfully" },
                    "errors": { "type": ["array", "null"], "items": { "type": "object" }, "nullable": true },
                    "data": { "type": "object", "properties": { "files": { "type": "array", "items": { "$ref": "#/components/schemas/InstructionDetail" } } } }
                  }
                }
              }
            }
          },
          "401": { "description": "Not authenticated" },
          "500": { "description": "Internal server error" }
        }
      }
    }
  },
  "securityDefinitions": {
    "x-authenticated": {
      "type": "apiKey",
      "in": "header",
      "name": "x-authenticated",
      "description": "Authentication status header"
    },
    "x-user-id": {
      "type": "apiKey",
      "in": "header",
      "name": "x-user-id",
      "description": "User ID header"
    },
    "x-user-origin": {
      "type": "apiKey",
      "in": "header",
      "name": "x-user-origin",
      "description": "Origin header for validation"
    }
  },
  "tags": [
    {
      "name": "products",
      "description": "Product management endpoints"
    },
    {
      "name": "instructions",
      "description": "Instruction management endpoints"
    },
    {
      "name": "files",
      "description": "File management endpoints"
    }
  ]
}